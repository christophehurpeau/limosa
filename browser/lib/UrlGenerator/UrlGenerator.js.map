{"version":3,"sources":["../../../src/UrlGenerator/UrlGenerator.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAAqB,Y;;;;;;;;;AAKjB,0BAAY,KAAZ,EAAmB,SAAnB,EAA8B;AAAA;;AAC1B,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,SAAL,GAAiB,SAAjB;AACH;;;;;;;;;;;;;;;;mCASQ,I,EAAM;AACX,gBAAI,MAAM,KAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAV;;AAEA,gBAAI,IAAJ,EAAU;AACN,oBAAI,KAAK,SAAT,EAAoB;AAChB,iCAAW,KAAK,SAAhB;AACH,iBAFD,MAEO,IAAI,KAAK,SAAT,EAAoB;AACvB,iCAAW,KAAK,SAAhB;AACH;;AAED,oBAAI,KAAK,WAAT,EAAsB;AAClB,iCAAW,KAAK,WAAhB,C;AACH;;AAED,oBAAI,KAAK,IAAT,EAAe;AACX,iCAAW,KAAK,IAAhB;AACH;AACJ,aAdD,MAcO,IAAI,KAAK,SAAT,EAAoB;AACvB,6BAAW,KAAK,SAAhB;AACH;;AAED,mBAAO,GAAP;AACH;;;;;;kBAvCgB,Y","file":"UrlGenerator.js","sourcesContent":["export default class UrlGenerator {\n    /**\n     * @param {UrlGeneratorPartArray} parts\n     * @param {string} extension\n     */\n    constructor(parts, extension) {\n        this.parts = parts;\n        this.extension = extension;\n    }\n\n    /**\n     * @param {object} args\n     * @param {string} [args.extension]\n     * @param {string} [args.queryString]\n     * @param {string} [args.hash]\n     * @returns {*}\n     */\n    generate(args) {\n        let url = this.parts.generate(args);\n\n        if (args) {\n            if (args.extension) {\n                url += `.${args.extension}`;\n            } else if (this.extension) {\n                url += `.${this.extension}`;\n            }\n\n            if (args.queryString) {\n                url += `?${args.queryString}`; // TODO: use qs ?\n            }\n\n            if (args.hash) {\n                url += `#${args.hash}`;\n            }\n        } else if (this.extension) {\n            url += `.${this.extension}`;\n        }\n\n        return url;\n    }\n}\n"]}