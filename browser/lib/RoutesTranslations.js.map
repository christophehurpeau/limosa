{"version":3,"sources":["../../src/RoutesTranslations.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqB;;;;;;;;AAIjB,aAJiB,kBAIjB,CAAY,YAAZ,EAA0B;8BAJT,oBAIS;;AACtB,aAAK,UAAL,GAAkB,IAAI,GAAJ,EAAlB,CADsB;;AAGtB,YAAI,CAAC,YAAD,EAAe;AACf,mBADe;SAAnB;;6CAHsB;;;;;AAOtB,iCAAmC,sCAAnC,oGAAiD;;;oBAAvC,qBAAuC;oBAAlC,iCAAkC;;;;;;AAC7C,0CAAgC,0CAAhC,wGAAiD;;;4BAAvC,uBAAuC;4BAAjC,8BAAiC;;AAC7C,4BAAI,CAAC,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAD,EAA4B;AAC5B,iCAAK,UAAL,CAAgB,GAAhB,CACI,IADJ,EAEI;AACI,2CAAW,IAAI,GAAJ,EAAX;AACA,6CAAa,IAAI,GAAJ,EAAb;6BAJR,EAD4B;yBAAhC;;AAUA,4BAAM,WAAW,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAX,CAXuC;;AAa7C,iCAAS,SAAT,CAAmB,GAAnB,CAAuB,IAAI,WAAJ,EAAvB,EAA0C,WAA1C,EAb6C;AAc7C,iCAAS,WAAT,CAAqB,GAArB,CAAyB,YAAY,WAAZ,EAAzB,EAAoD,GAApD,EAd6C;qBAAjD;;;;;;;;;;;;;;iBAD6C;aAAjD;;;;;;;;;;;;;;SAPsB;KAA1B;;;;;;;;iBAJiB;;;;;;oCAoCP,QAAQ,MAAM;AACpB,qBAAS,OAAO,WAAP,EAAT,CADoB;AAEpB,gBAAM,kBAAkB,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,EAA0B,SAA1B,CAFJ;;AAIpB,gBAAI,CAAC,gBAAgB,GAAhB,CAAoB,MAApB,CAAD,EAA8B;AAC9B,sBAAM,IAAI,KAAJ,0BAAiC,wBAAmB,IAApD,CAAN,CAD8B;aAAlC;;AAIA,mBAAO,gBAAgB,GAAhB,CAAoB,MAApB,CAAP,CARoB;;;;;;;;;;;;;;;sCAgBZ,QAAQ,MAAM;AACtB,qBAAS,OAAO,WAAP,EAAT,CADsB;AAEtB,gBAAM,kBAAkB,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,EAA0B,WAA1B,CAFF;;AAItB,gBAAI,CAAC,gBAAgB,GAAhB,CAAoB,MAApB,CAAD,EAA8B;AAC9B,sBAAM,IAAI,KAAJ,4BAAmC,wBAAmB,IAAtD,CAAN,CAD8B;aAAlC;;AAIA,mBAAO,gBAAgB,GAAhB,CAAoB,MAApB,CAAP,CARsB;;;;WApDT","file":"RoutesTranslations.js","sourcesContent":["/**\n * Convert a simple conf file key=>value into a two-way translation map\n */\nexport default class RoutesTranslations {\n    /**\n     * @param {Map} translations\n     */\n    constructor(translations) {\n        this._languages = new Map();\n\n        if (!translations) {\n            return;\n        }\n\n        for (let [key, translationsMap] of translations) {\n            for (let [lang, translation] of translationsMap) {\n                if (!this._languages.has(lang)) {\n                    this._languages.set(\n                        lang,\n                        {\n                            translate: new Map(),\n                            untranslate: new Map(),\n                        }\n                    );\n                }\n\n                const language = this._languages.get(lang);\n\n                language.translate.set(key.toLowerCase(), translation);\n                language.untranslate.set(translation.toLowerCase(), key);\n            }\n        }\n    }\n\n    /**\n     * @param {string} string\n     * @param {string} lang\n     * @return {string}\n     */\n    translate(string, lang) {\n        string = string.toLowerCase();\n        const translationsMap = this._languages.get(lang).translate;\n\n        if (!translationsMap.has(string)) {\n            throw new Error(`Missing translation ${string} for lang ${lang}`);\n        }\n\n        return translationsMap.get(string);\n    }\n\n    /**\n     * @param {string} string\n     * @param {string} lang\n     * @return {string}\n     */\n    untranslate(string, lang) {\n        string = string.toLowerCase();\n        const translationsMap = this._languages.get(lang).untranslate;\n\n        if (!translationsMap.has(string)) {\n            throw new Error(`Missing untranslation ${string} for lang ${lang}`);\n        }\n\n        return translationsMap.get(string);\n    }\n}\n"]}