{"version":3,"sources":["../src/test.js"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["/* global test */\nimport RouterBuilder from '../../lib/RouterBuilder/RouterBuilder';\nimport RouteTranslations from '../../lib/RoutesTranslations';\n\nimport assert from 'proclaim';\n\n// const routesLangsConfig = fs.readYamlFileSync('example/routesLangs.yml');\nconst routesLangsConfig = new Map([\n    ['login', new Map([['en', 'login'], ['fr', 'connexion']])],\n    ['post', new Map([['en', 'post'], ['fr', 'article']])],\n    ['view', new Map([['en', 'view'], ['fr', 'afficher']])],\n]);\n\nconst routesTranslations = new RouteTranslations(routesLangsConfig);\n\ntest('RouteTranslations', () => {\n    assert.strictEqual(routesTranslations.translate('login', 'fr'), 'connexion');\n    assert.strictEqual(routesTranslations.untranslate('connexion', 'fr'), 'login');\n});\n\nconst builder = new RouterBuilder(routesTranslations, ['en', 'fr']);\nconst router = builder.router;\n\nbuilder\n    .add('/', '/', 'site.index')\n    .add('postView', '/post/${id}-${slug}', 'post.view', {\n        namedParamsDefinition: { slug: '[A-Za-z\\\\-]+' },\n        extension: 'htm',\n    })\n    .add('postView2', '/post/${id}-${slug}', 'post.view', {\n        namedParamsDefinition: { slug: /[A-Za-z\\-]+/ },\n        extension: 'htm',\n    })\n    .add('postWithDate', '/post[/${tagKey}]/${date}_${slug}', 'post.view', {\n        namedParamsDefinition: { date: '\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2}' },\n    })\n    .addDefaultRoutes();\n\ntest('Named param route', () => {\n    let rr = router.get('postView');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['id', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 2);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(en.url({ id: 1, slug: 'a-slug' }), '/post/1-a-slug.htm');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(fr.url({ id: 1, slug: 'un-slug' }), '/article/1-un-slug.htm');\n});\n\ntest('Named param route with RegExp', () => {\n    let rr = router.get('postView2');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['id', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 2);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(en.url({ id: 1, slug: 'a-slug' }), '/post/1-a-slug.htm');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(fr.url({ id: 1, slug: 'un-slug' }), '/article/1-un-slug.htm');\n});\n\ntest('More complex param route', () => {\n    let rr = router.get('postWithDate');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['tagKey', 'date', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 3);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post(?:\\/([^\\/.]+))?\\/(\\d{4}\\-\\d{2}\\-\\d{2})_([^\\/.]+)$/.source);\n    assert.strictEqual(en.url({ date: '2015-01-01', slug: 'a-slug' }), '/post/2015-01-01_a-slug');\n    assert.strictEqual(\n        en.url({ date: '2015-01-01', slug: 'a-slug', tagKey: 'some-tag' }),\n        '/post/some-tag/2015-01-01_a-slug'\n    );\n\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article(?:\\/([^\\/.]+))?\\/(\\d{4}\\-\\d{2}\\-\\d{2})_([^\\/.]+)$/.source);\n    assert.strictEqual(fr.url({ date: '2015-01-01', slug: 'un-slug' }), '/article/2015-01-01_un-slug');\n});\n\ntest('Find simple routes', () => {\n    let r = router.find('/', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/');\n    assert.strictEqual(r.controller, 'site');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/');\n    assert.strictEqual(r.controller, 'site');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n});\n\ntest('Find common routes, /:controller', () => {\n    let r = router.find('/post', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/post.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n\n    r = router.find('/article', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n});\n\ntest('Find common routes, /:controller/:action', () => {\n    let r = router.find('/post/view', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/post/view.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n\n    r = router.find('/article/afficher', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article/afficher.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n});\n\ntest('Find common routes, /:controller/:action/*', () => {\n    let r = router.find('/post/view/test1/test2', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view/test1/test2');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/post/view/test1/test2.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view/test1/test2.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/article/afficher/test1/test2', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher/test1/test2');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/article/afficher/test1/test2.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher/test1/test2.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n});\n\ntest('Find named param route', () => {\n    let r = router.find('/post/001-The-First-Post.htm', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/001-The-First-Post.htm');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'htm');\n    let namedParams = r.namedParams;\n    assert.isInstanceOf(namedParams, Map);\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('id'), '001');\n    assert.strictEqual(r.namedParams.get('slug'), 'The-First-Post');\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article/001-Le-Premier-Billet.htm', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/001-Le-Premier-Billet.htm');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'htm');\n    namedParams = r.namedParams;\n    assert.isInstanceOf(namedParams, Map);\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('id'), '001');\n    assert.strictEqual(r.namedParams.get('slug'), 'Le-Premier-Billet');\n    assert.strictEqual(r.otherParams, undefined);\n});\n\n\ntest('Find postWithDate without tag', () => {\n    let r = router.find('/post/2015-01-01_a-slug', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/2015-01-01_a-slug');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('date'), '2015-01-01');\n    assert.strictEqual(r.namedParams.get('slug'), 'a-slug');\n});\n\ntest('Find postWithDate with tag', () => {\n    let r = router.find('/post/some-tag/2015-01-01_a-slug', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/some-tag/2015-01-01_a-slug');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.namedParams.size, 3);\n    assert.strictEqual(r.namedParams.get('tagKey'), 'some-tag');\n    assert.strictEqual(r.namedParams.get('date'), '2015-01-01');\n    assert.strictEqual(r.namedParams.get('slug'), 'a-slug');\n});\n\ntest('Router generator default', () => {\n    let url = router.urlGenerator('en', 'default', { controller: 'post', action: 'view' });\n    assert.strictEqual(url, '/post/view.html');\n});\n\ntest('Router generator postView', () => {\n    let url = router.urlGenerator('en', 'postView', { id: '001', slug: 'Le-Premier-Billet' });\n    assert.strictEqual(url, '/post/001-Le-Premier-Billet.htm');\n\n    url = router.urlGenerator('fr', 'postView', { id: '001', slug: 'Le-Premier-Billet' });\n    assert.strictEqual(url, '/article/001-Le-Premier-Billet.htm');\n});\n"]}