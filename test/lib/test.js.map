{"version":3,"sources":["../src/test.js"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["/* global test */\nimport RouterBuilder from '../../lib/RouterBuilder';\nimport RouteTranslations from '../../lib/RoutesTranslations';\n\nimport assert from 'proclaim';\n\n// const routesLangsConfig = fs.readYamlFileSync('example/routesLangs.yml');\nconst routesLangsConfig = new Map([\n    ['login', new Map([['en', 'login'], ['fr', 'connexion']])],\n    ['post', new Map([['en', 'post'], ['fr', 'article']])],\n    ['view', new Map([['en', 'view'], ['fr', 'afficher']])],\n]);\n\nconst routesTranslations = new RouteTranslations(routesLangsConfig);\n\ntest('RouteTranslations', () => {\n    assert.strictEqual(routesTranslations.translate('login', 'fr'), 'connexion');\n    assert.strictEqual(routesTranslations.untranslate('connexion', 'fr'), 'login');\n});\n\nconst builder = new RouterBuilder(routesTranslations, ['en', 'fr']);\nconst router = builder.router;\n\nbuilder\n    .add('/', '/', 'site.index')\n    .add('postView', '/post/${id}-${slug}', 'post.view', {\n        namedParamsDefinition: { slug: '[A-Za-z\\\\-]+' },\n        extension: 'htm',\n    })\n    .add('postView2', '/post/${id}-${slug}', 'post.view', {\n        namedParamsDefinition: { slug: /[A-Za-z\\-]+/ },\n        extension: 'htm',\n    })\n    .add('postWithDate', '/post[/${tagKey}]/${date}_${slug}', 'post.view', {\n        namedParamsDefinition: { date: '\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2}' },\n    })\n    .addDefaultRoutes();\n\ntest('SimpleRoute', () => {\n    let rr = router.get('/');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'site');\n    assert.strictEqual(rr.action, 'index');\n    assert.strictEqual(rr.getNamedParamsCount(), 0);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, '^\\\\/$');\n    assert.strictEqual(en.url(), '/');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, '^\\\\/$');\n    assert.strictEqual(fr.url(), '/');\n});\n\ntest('Common route', () => {\n    let rrs = router.get('defaultSimple');\n    assert.ok(rrs != null);\n    assert.strictEqual(rrs.controller, 'site');\n    assert.strictEqual(rrs.action, 'index');\n    assert.strictEqual(rrs.getNamedParamsCount(), 0);\n    let rsen = rrs.get('en');\n    assert.strictEqual(rsen.regExp.source, '^(?:\\\\.(html))?$');\n    assert.strictEqual(rsen.url({ controller: 'post' }), '/post.html');\n    let rsfr = rrs.get('fr');\n    assert.strictEqual(rsfr.regExp.source, '^(?:\\\\.(html))?$');\n    assert.strictEqual(rsfr.url({ controller: 'post' }), '/article.html');\n\n    let rr = router.get('default');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'site');\n    assert.strictEqual(rr.action, 'index');\n    assert.deepEqual(rr.namedParams, ['action']);\n    assert.strictEqual(rr.getNamedParamsCount(), 1);\n    let en = rr.get('en');\n\n    assert.strictEqual(en.regExp.source, /^\\/([^\\/.]+)(?:\\/([^.]*))?(?:\\.(html))?$/.source);\n    assert.strictEqual(en.url({ controller: 'post', action: 'view' }), '/post/view.html');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/([^\\/.]+)(?:\\/([^.]*))?(?:\\.(html))?$/.source);\n    assert.strictEqual(fr.url({ controller: 'post', action: 'view' }), '/article/afficher.html');\n});\n\ntest('Named param route', () => {\n    let rr = router.get('postView');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['id', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 2);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(en.url({ id: 1, slug: 'a-slug' }), '/post/1-a-slug.htm');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(fr.url({ id: 1, slug: 'un-slug' }), '/article/1-un-slug.htm');\n});\n\ntest('Named param route with RegExp', () => {\n    let rr = router.get('postView2');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['id', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 2);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(en.url({ id: 1, slug: 'a-slug' }), '/post/1-a-slug.htm');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(fr.url({ id: 1, slug: 'un-slug' }), '/article/1-un-slug.htm');\n});\n\ntest('More complex param route', () => {\n    let rr = router.get('postWithDate');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['tagKey', 'date', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 3);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post(?:\\/([^\\/.]+))\\/(\\d{4}\\-\\d{2}\\-\\d{2})_([^\\/.]+)$/.source);\n    assert.strictEqual(en.url({ date: '2015-01-01', slug: 'a-slug' }), '/post/2015-01-01_a-slug');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article(?:\\/([^\\/.]+))\\/(\\d{4}\\-\\d{2}\\-\\d{2})_([^\\/.]+)$/.source);\n    assert.strictEqual(fr.url({ date: '2015-01-01', slug: 'un-slug' }), '/article/2015-01-01_un-slug');\n});\n\ntest('Find simple routes', () => {\n    let r = router.find('/', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/');\n    assert.strictEqual(r.controller, 'site');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/');\n    assert.strictEqual(r.controller, 'site');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n});\n\ntest('Find common routes, /:controller', () => {\n    let r = router.find('/post', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/post.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n\n    r = router.find('/article', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n});\n\ntest('Find common routes, /:controller/:action', () => {\n    let r = router.find('/post/view', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/post/view.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n\n    r = router.find('/article/afficher', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article/afficher.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n});\n\ntest('Find common routes, /:controller/:action/*', () => {\n    let r = router.find('/post/view/test1/test2', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view/test1/test2');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/post/view/test1/test2.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view/test1/test2.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/article/afficher/test1/test2', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher/test1/test2');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/article/afficher/test1/test2.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher/test1/test2.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n});\n\ntest('Find named param route', () => {\n    let r = router.find('/post/001-The-First-Post.htm', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/001-The-First-Post.htm');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'htm');\n    let namedParams = r.namedParams;\n    assert.isInstanceOf(namedParams, Map);\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('id'), '001');\n    assert.strictEqual(r.namedParams.get('slug'), 'The-First-Post');\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article/001-Le-Premier-Billet.htm', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/001-Le-Premier-Billet.htm');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'htm');\n    namedParams = r.namedParams;\n    assert.isInstanceOf(namedParams, Map);\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('id'), '001');\n    assert.strictEqual(r.namedParams.get('slug'), 'Le-Premier-Billet');\n    assert.strictEqual(r.otherParams, undefined);\n});\n\ntest('Router generator default', () => {\n    let url = router.urlGenerator('en', 'default', { controller: 'post', action: 'view' });\n    assert.strictEqual(url, '/post/view.html');\n});\n\ntest('Router generator postView', () => {\n    let url = router.urlGenerator('en', 'postView', { id: '001', slug: 'Le-Premier-Billet' });\n    assert.strictEqual(url, '/post/001-Le-Premier-Billet.htm');\n\n    url = router.urlGenerator('fr', 'postView', { id: '001', slug: 'Le-Premier-Billet' });\n    assert.strictEqual(url, '/article/001-Le-Premier-Billet.htm');\n});\n"]}