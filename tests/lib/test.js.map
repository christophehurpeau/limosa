{"version":3,"sources":["../src/test.js"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["/* global test */\nimport RouterBuilder from '../../lib/RouterBuilder';\nimport RouteTranslations from '../../lib/RoutesTranslations';\n\nimport assert from 'proclaim';\n\n// const routesLangsConfig = fs.readYamlFileSync('example/routesLangs.yml');\nconst routesLangsConfig = new Map([\n    ['login', new Map([['en', 'login'], ['fr', 'connexion']])],\n    ['post', new Map([['en', 'post'], ['fr', 'article']])],\n    ['view', new Map([['en', 'view'], ['fr', 'afficher']])],\n]);\n\nconst routesTranslations = new RouteTranslations(routesLangsConfig);\n\ntest('RouteTranslations', function() {\n    assert.strictEqual(routesTranslations.translate('login', 'fr'), 'connexion');\n    assert.strictEqual(routesTranslations.untranslate('connexion', 'fr'), 'login');\n});\n\nconst builder = new RouterBuilder(routesTranslations, ['en', 'fr']);\nconst router = builder.router;\n\nbuilder\n    .add('/', '/', 'site.index')\n    .add('postView', '/post/${id}-${slug}', 'post.view', {\n        namedParamsDefinition: { slug: '[A-Za-z\\\\-]+' },\n        extension: 'htm',\n    })\n    .add('postView2', '/post/${id}-${slug}', 'post.view', {\n        namedParamsDefinition: { slug: /[A-Za-z\\-]+/ },\n        extension: 'htm',\n    })\n    .add('postWithDate', '/post[/${tagKey}]/${date}_${slug}', 'post.view', {\n        namedParamsDefinition: { date: '\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2}' },\n    })\n    .addDefaultRoutes();\n\ntest('SimpleRoute', function() {\n    let rr = router.get('/');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'site');\n    assert.strictEqual(rr.action, 'index');\n    assert.strictEqual(rr.getNamedParamsCount(), 0);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, '^\\\\/$');\n    assert.strictEqual(en.url(), '/');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, '^\\\\/$');\n    assert.strictEqual(fr.url(), '/');\n});\n\ntest('Common route', function() {\n    let rrs = router.get('defaultSimple');\n    assert.ok(rrs != null);\n    assert.strictEqual(rrs.controller, 'site');\n    assert.strictEqual(rrs.action, 'index');\n    assert.strictEqual(rrs.getNamedParamsCount(), 0);\n    let rsen = rrs.get('en');\n    assert.strictEqual(rsen.regExp.source, '^(?:\\\\.(html))?$');\n    assert.strictEqual(rsen.url({ controller: 'post' }), '/post.html');\n    let rsfr = rrs.get('fr');\n    assert.strictEqual(rsfr.regExp.source, '^(?:\\\\.(html))?$');\n    assert.strictEqual(rsfr.url({ controller: 'post' }), '/article.html');\n\n    let rr = router.get('default');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'site');\n    assert.strictEqual(rr.action, 'index');\n    assert.deepEqual(rr.namedParams, ['action']);\n    assert.strictEqual(rr.getNamedParamsCount(), 1);\n    let en = rr.get('en');\n\n    assert.strictEqual(en.regExp.source, /^\\/([^\\/.]+)(?:\\/([^.]*))?(?:\\.(html))?$/.source);\n    assert.strictEqual(en.url({ controller: 'post', action: 'view' }), '/post/view.html');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/([^\\/.]+)(?:\\/([^.]*))?(?:\\.(html))?$/.source);\n    assert.strictEqual(fr.url({ controller: 'post', action: 'view' }), '/article/afficher.html');\n});\n\ntest('Named param route', function() {\n    let rr = router.get('postView');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['id', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 2);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(en.url({ id: 1, slug: 'a-slug' }), '/post/1-a-slug.htm');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(fr.url({ id: 1, slug: 'un-slug' }), '/article/1-un-slug.htm');\n});\n\ntest('Named param route with RegExp', function() {\n    let rr = router.get('postView2');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['id', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 2);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(en.url({ id: 1, slug: 'a-slug' }), '/post/1-a-slug.htm');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article\\/([0-9]+)\\-([A-Za-z\\-]+)\\.(htm)$/.source);\n    assert.strictEqual(fr.url({ id: 1, slug: 'un-slug' }), '/article/1-un-slug.htm');\n});\n\ntest('More complex param route', function() {\n    let rr = router.get('postWithDate');\n    assert.ok(rr != null);\n    assert.strictEqual(rr.controller, 'post');\n    assert.strictEqual(rr.action, 'view');\n    assert.deepEqual(rr.namedParams, ['tagKey', 'date', 'slug']);\n    assert.strictEqual(rr.getNamedParamsCount(), 3);\n    let en = rr.get('en');\n    assert.strictEqual(en.regExp.source, /^\\/post(?:\\/([^\\/.]+))\\/(\\d{4}\\-\\d{2}\\-\\d{2})_([^\\/.]+)$/.source);\n    assert.strictEqual(en.url({ date: '2015-01-01', slug: 'a-slug' }), '/post/2015-01-01_a-slug');\n    let fr = rr.get('fr');\n    assert.strictEqual(fr.regExp.source, /^\\/article(?:\\/([^\\/.]+))\\/(\\d{4}\\-\\d{2}\\-\\d{2})_([^\\/.]+)$/.source);\n    assert.strictEqual(fr.url({ date: '2015-01-01', slug: 'un-slug' }), '/article/2015-01-01_un-slug');\n});\n\ntest('Find simple routes', function() {\n    let r = router.find('/', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/');\n    assert.strictEqual(r.controller, 'site');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/');\n    assert.strictEqual(r.controller, 'site');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n});\n\ntest('Find common routes, /:controller', function() {\n    let r = router.find('/post', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/post.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n\n    r = router.find('/article', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'index');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n});\n\ntest('Find common routes, /:controller/:action', function() {\n    let r = router.find('/post/view', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/post/view.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n\n    r = router.find('/article/afficher', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article/afficher.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n});\n\ntest('Find common routes, /:controller/:action/*', function() {\n    let r = router.find('/post/view/test1/test2', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view/test1/test2');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/post/view/test1/test2.html', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/view/test1/test2.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/article/afficher/test1/test2', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher/test1/test2');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, undefined);\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n\n    r = router.find('/article/afficher/test1/test2.html', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/afficher/test1/test2.html');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'html');\n    assert.strictEqual(r.namedParams, undefined);\n    assert.deepEqual(r.otherParams, ['test1', 'test2']);\n});\n\ntest('Find named param route', function() {\n    let r = router.find('/post/001-The-First-Post.htm', 'en');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/post/001-The-First-Post.htm');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'htm');\n    let namedParams = r.namedParams;\n    assert.isInstanceOf(namedParams, Map);\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('id'), '001');\n    assert.strictEqual(r.namedParams.get('slug'), 'The-First-Post');\n    assert.strictEqual(r.otherParams, undefined);\n\n    r = router.find('/article/001-Le-Premier-Billet.htm', 'fr');\n    assert.ok(r != null);\n    assert.strictEqual(r.all, '/article/001-Le-Premier-Billet.htm');\n    assert.strictEqual(r.controller, 'post');\n    assert.strictEqual(r.action, 'view');\n    assert.strictEqual(r.extension, 'htm');\n    namedParams = r.namedParams;\n    assert.isInstanceOf(namedParams, Map);\n    assert.strictEqual(r.namedParams.size, 2);\n    assert.strictEqual(r.namedParams.get('id'), '001');\n    assert.strictEqual(r.namedParams.get('slug'), 'Le-Premier-Billet');\n    assert.strictEqual(r.otherParams, undefined);\n});\n\ntest('Router generator default', function() {\n    let url = router.urlGenerator('en', 'default', { controller: 'post', action: 'view' });\n    assert.strictEqual(url, '/post/view.html');\n});\n\ntest('Router generator postView', function() {\n    let url = router.urlGenerator('en', 'postView', { id: '001', slug: 'Le-Premier-Billet' });\n    assert.strictEqual(url, '/post/001-Le-Premier-Billet.htm');\n\n    url = router.urlGenerator('fr', 'postView', { id: '001', slug: 'Le-Premier-Billet' });\n    assert.strictEqual(url, '/article/001-Le-Premier-Billet.htm');\n});\n"]}