{"version":3,"sources":["../../src/UrlGenerator/UrlGenerator.js"],"names":[],"mappings":";;;;;IAAqB,Y,GAAN,MAAM,YAAN,CAAmB;;;;;AAK9B,gBAAY,KAAZ,EAAmB,SAAnB,EAA8B;AAC1B,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,SAAL,GAAiB,SAAjB;AACH;;;;;;;;;AASD,aAAS,IAAT,EAAe;AACX,YAAI;AACA,gBAAI,MAAM,KAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAV;;AAEA,gBAAI,IAAJ,EAAU;AACN,oBAAI,KAAK,SAAT,EAAoB;AAChB,2BAAO,CAAC,CAAD,GAAI,KAAK,SAAT,EAAmB,AAAnB,CAAP;AACH,iBAFD,MAEO,IAAI,KAAK,SAAT,EAAoB;AACvB,2BAAO,CAAC,CAAD,GAAI,KAAK,SAAT,EAAmB,AAAnB,CAAP;AACH;;AAED,oBAAI,KAAK,WAAT,EAAsB;AAClB,2BAAO,CAAC,CAAD,GAAI,KAAK,WAAT,EAAqB,AAArB,CAAP,C;AACH;;AAED,oBAAI,KAAK,IAAT,EAAe;AACX,2BAAO,CAAC,CAAD,GAAI,KAAK,IAAT,EAAc,AAAd,CAAP;AACH;AACJ,aAdD,MAcO,IAAI,KAAK,SAAT,EAAoB;AACvB,uBAAO,CAAC,CAAD,GAAI,KAAK,SAAT,EAAmB,AAAnB,CAAP;AACH;;AAED,mBAAO,GAAP;AACH,SAtBD,CAsBE,OAAO,GAAP,EAAY;AACV,kBAAM,IAAI,KAAJ,CAAU,CAAC,wBAAD,GAA2B,IAAI,OAA/B,EAAuC,MAAvC,GAA+C,KAAK,SAAL,CAAe,IAAf,CAA/C,EAAoE,AAApE,CAAV,CAAN;AACH;AACJ;AA3C6B,C;kBAAb,Y","file":"UrlGenerator.js","sourcesContent":["export default class UrlGenerator {\n    /**\n     * @param {UrlGeneratorPartArray} parts\n     * @param {string} extension\n     */\n    constructor(parts, extension) {\n        this.parts = parts;\n        this.extension = extension;\n    }\n\n    /**\n     * @param {object} args\n     * @param {string} [args.extension]\n     * @param {string} [args.queryString]\n     * @param {string} [args.hash]\n     * @returns {*}\n     */\n    generate(args) {\n        try {\n            let url = this.parts.generate(args);\n\n            if (args) {\n                if (args.extension) {\n                    url += `.${args.extension}`;\n                } else if (this.extension) {\n                    url += `.${this.extension}`;\n                }\n\n                if (args.queryString) {\n                    url += `?${args.queryString}`; // TODO: use qs ?\n                }\n\n                if (args.hash) {\n                    url += `#${args.hash}`;\n                }\n            } else if (this.extension) {\n                url += `.${this.extension}`;\n            }\n\n            return url;\n        } catch (err) {\n            throw new Error(`Failed to generate url: ${err.message} args=${JSON.stringify(args)}`);\n        }\n    }\n}\n"]}