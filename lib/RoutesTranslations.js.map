{"version":3,"sources":["../src/RoutesTranslations.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAGqB,kBAAkB;AACxB,aADM,kBAAkB,CACvB,YAAiB,EAAE;8BADd,kBAAkB;;AAE/B,YAAI,CAAC,UAAU,GAAG,UAAS,CAAC;;AAE5B,YAAI,CAAC,YAAY,EAAE;AACf,mBAAO;SACV;;AAED,6BAAmC,YAAY,6GAAE;;;;;;;;;;;;gBAAvC,GAAG;gBAAE,eAAe;;AAC1B,kCAAgC,eAAe,oHAAE;;;;;;;;;;;;oBAAvC,IAAI;oBAAE,WAAW;;AACvB,oBAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC5B,wBAAI,CAAC,UAAU,CAAC,GAAG,CACf,IAAI,EACJ;AACI,iCAAS,EAAE,UAAS;AACpB,mCAAW,EAAE,UAAS;qBACzB,CACJ,CAAC;iBACL;;AAED,sBAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAE3C,wBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,WAAW,CAAC,CAAC;AACvD,wBAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC;aAC5D;SACJ;KACJ;;;;;;;;;;;;;iBA1BgB,kBAAkB;;eAiC1B,mBAAC,MAAM,EAAE,IAAI,EAAE;AACpB,kBAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAC9B,kBAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;;AAE5D,gBAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAC9B,sBAAM,IAAI,KAAK,CAAC,sBAAsB,GAAG,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC;aAC1E;;AAED,mBAAO,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACtC;;;;;;;;;;;;;;eAOU,qBAAC,MAAM,EAAE,IAAI,EAAE;AACtB,kBAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAC9B,kBAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;AAE9D,gBAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAC9B,sBAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC;aAC5E;;AAED,mBAAO,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACtC;;;WA1DgB,kBAAkB;;;kBAAlB,kBAAkB","file":"RoutesTranslations.js","sourcesContent":["/**\n * Convert a simple conf file key=>value into a two-way translation map\n */\nexport default class RoutesTranslations {\n    constructor(translations: Map) {\n        this._languages = new Map();\n\n        if (!translations) {\n            return;\n        }\n\n        for (let [key, translationsMap] of translations) {\n            for (let [lang, translation] of translationsMap) {\n                if (!this._languages.has(lang)) {\n                    this._languages.set(\n                        lang,\n                        {\n                            translate: new Map(),\n                            untranslate: new Map(),\n                        }\n                    );\n                }\n\n                const language = this._languages.get(lang);\n\n                language.translate.set(key.toLowerCase(), translation);\n                language.untranslate.set(translation.toLowerCase(), key);\n            }\n        }\n    }\n\n    /**\n     * @param {String} string\n     * @param {String} lang\n     * @return {String}\n     */\n    translate(string, lang) {\n        string = string.toLowerCase();\n        const translationsMap = this._languages.get(lang).translate;\n\n        if (!translationsMap.has(string)) {\n            throw new Error('Missing translation ' + string + ' for lang ' + lang);\n        }\n\n        return translationsMap.get(string);\n    }\n\n    /**\n     * @param {String} string\n     * @param {String} lang\n     * @return {String}\n     */\n    untranslate(string, lang) {\n        string = string.toLowerCase();\n        const translationsMap = this._languages.get(lang).untranslate;\n\n        if (!translationsMap.has(string)) {\n            throw new Error('Missing untranslation ' + string + ' for lang ' + lang);\n        }\n\n        return translationsMap.get(string);\n    }\n}\n"]}