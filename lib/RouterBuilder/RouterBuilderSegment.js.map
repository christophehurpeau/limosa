{"version":3,"sources":["../../src/RouterBuilder/RouterBuilderSegment.js"],"names":[],"mappings":";;;;;;;;IAGqB,oB,GAAN,MAAM,oBAAN,CAA2B;;;;;;AAMtC,gBAAY,OAAZ,EAAqB,KAArB,EAA4B,MAA5B,EAAoC;AAChC,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,MAAL,GAAc,MAAd;AACH;;;;;;;;;;;AAUD,QAAI,QAAJ,EAAc,QAAd,EAAwB,iCAAxB,EAA2D,OAA3D,EAAoE;AAChE,cAAM,QAAQ,KAAK,YAAL,CACV,QADU,EAEV,QAFU,EAGV,iCAHU,EAIV,OAJU,CAAd;AAMA,aAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,CAA0B,KAA1B;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,iBAApB,CAAsC,QAAtC,EAAgD,KAAhD;AACA,eAAO,IAAP;AACH;;;;;;;;;;;AAUD,iBAAa,QAAb,EAAuB,QAAvB,EAAiC,iCAAjC,EAAoE,OAApE,EAA6E;AACzE,eAAO,KAAK,OAAL,CAAa,YAAb,CAA0B,KAA1B,EAAiC,KAAK,KAAtC,EAA6C,QAA7C,EACH,iCADG,EAEH,WAAW,QAAQ,qBAFhB,EAGH,WAAW,QAAQ,UAHhB,EAIH,WAAW,QAAQ,SAJhB,CAAP;AAKH;;;;;;;;;;AASD,iBAAa,QAAb,EAAuB,iCAAvB,EAA0D,OAA1D,EAAmE;AAC/D,cAAM,QAAQ,KAAK,YAAL,CAAkB,QAAlB,EAA4B,EAA5B,EAAgC,iCAAhC,EAAmE,OAAnE,CAAd;;;AAGA,aAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,CAA0B,KAA1B;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,iBAApB,CAAsC,QAAtC,EAAgD,KAAhD;AACA,eAAO,IAAP;AACH;;;;;;;;;AAQD,eAAW,QAAX,EAAqB,OAArB,EAA8B,YAA9B,EAA4C;AACxC,YAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,2BAAe,OAAf;AACA,sBAAU,EAAV;AACH;;AAED,cAAM,QAAQ,KAAK,OAAL,CAAa,mBAAb,CAAiC,KAAK,KAAtC,EAA6C,QAA7C,EACV,QAAQ,qBADE,EACqB,QAAQ,UAD7B,CAAd;AAEA,cAAM,UAAU,IAAI,oBAAJ,CAAyB,KAAK,MAA9B,EAAsC,KAAtC,EAA6C,KAAK,KAAlD,CAAhB;AACA,qBAAa,OAAb;AACA,aAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAA2B,KAA3B;AACH;AAjFqC,C;kBAArB,oB","file":"RouterBuilderSegment.js","sourcesContent":["/**\n * Build a route segment\n */\nexport default class RouterBuilderSegment {\n    /**\n     * @param {RouterBuilder} builder\n     * @param {RouterRouteSegment} route\n     * @param {RouterRouteSegment} [parent]\n     */\n    constructor(builder, route, parent) {\n        this.builder = builder;\n        this.route = route;\n        this.parent = parent;\n    }\n\n    /**\n     * @param {string} routeKey\n     * @param {string} routeUrl\n     * @param {string} controllerAndActionSeparatedByDot\n     * @param {Map} options.namedParamsDefinition\n     * @param {Map} options.routeLangs\n     * @param {string} options.extension\n     */\n    add(routeKey, routeUrl, controllerAndActionSeparatedByDot, options) {\n        const route = this._createRoute(\n            routeKey,\n            routeUrl,\n            controllerAndActionSeparatedByDot,\n            options\n        );\n        this.route.subRoutes.push(route);\n        this.builder.router._addInternalRoute(routeKey, route);\n        return this;\n    }\n\n    /**\n     * @param {string} routeKey\n     * @param {string} routeUrl\n     * @param {string} controllerAndActionSeparatedByDot\n     * @param {Map} options.namedParamsDefinition\n     * @param {Map} options.routeLangs\n     * @param {string} options.extension\n     */\n    _createRoute(routeKey, routeUrl, controllerAndActionSeparatedByDot, options) {\n        return this.builder._createRoute(false, this.route, routeUrl,\n            controllerAndActionSeparatedByDot,\n            options && options.namedParamsDefinition,\n            options && options.routeLangs,\n            options && options.extension);\n    }\n\n    /**\n     * @param {string} routeKey\n     * @param {string} controllerAndActionSeparatedByDot\n     * @param {Map} options.namedParamsDefinition\n     * @param {Map} options.routeLangs\n     * @param {string} options.extension\n     */\n    defaultRoute(routeKey, controllerAndActionSeparatedByDot, options) {\n        const route = this._createRoute(routeKey, '', controllerAndActionSeparatedByDot, options);\n        // this.route.defaultRoute = route;\n        // this.builder.router._addInternalRoute(routeKey, route);\n        this.route.subRoutes.push(route);\n        this.builder.router._addInternalRoute(routeKey, route);\n        return this;\n    }\n\n    /**\n     * @param {string} routeUrl\n     * @param {Map} [options.namedParamsDefinition]\n     * @param {Map} [options.routeLangs]\n     * @param {Function} buildSegment\n     */\n    addSegment(routeUrl, options, buildSegment) {\n        if (typeof options === 'function') {\n            buildSegment = options;\n            options = {};\n        }\n\n        const route = this.builder._createRouteSegment(this.route, routeUrl,\n            options.namedParamsDefinition, options.routeLangs);\n        const segment = new RouterBuilderSegment(this.buider, route, this.route);\n        buildSegment(segment);\n        this.router.addRoute(null, route);\n    }\n}\n"]}